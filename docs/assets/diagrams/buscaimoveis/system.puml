@startuml system
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!$ICONURL = "https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v2.4.0"
!include $ICONURL/devicons/go.puml
!include $ICONURL/devicons/python.puml
!include $ICONURL/devicons/react.puml
!include $ICONURL/devicons/mongodb.puml
!include $ICONURL/devicons/postgresql.puml

AddRelTag("async", $lineStyle = DashedLine())

LAYOUT_WITH_LEGEND()

Person(user, "Cliente", "Um usuário do sistema que busca anúncios de imóveis")
System_Ext(sites, "Portais de Imóveis", "Sites de anúncios de imóveis com os dados disponíveis para coleta")

System_Boundary(buscaimoveis, "Busca Imoveis") {
    Container(frontend, "Single Page Application", "React", "Disponibiliza o acesso a todos os anúncios coletados", $sprite = "react")

    Container(scraper, "Scraper", "Python/Scrapy", "Efetua a raspagem dos dados dos anúncios nos portais", $sprite = "python")
    ContainerDb(scraper_db, "Scraper Database", "MongoDB", "Armazena o histórico das coletas", $sprite = "mongodb")
    ContainerQueue(scraper_queue, "Scraper Queue", "RabbitMQ", "Recebe e distribui os dados dos anúncios")

    Container(api, "API Application", "Python/FastAPI", "Disponibiliza os dados dos anúncios", $sprite = "python")
    Container(processor, "Processor Data", "Go", "Faz o processamento e tratamento dos anúncios coletados", $sprite = "go")
    ContainerDb(api_db, "API Database", "PostgreSQL", "Armazena os dados dos anúncios processados", $sprite = "postgresql")

    Rel(user, frontend, "Busca os anúncios de imóveis no", "HTTPS")
    Rel(frontend, api, "Solicita os dados dos anúncios em", "HTTPS/JSON")
    Rel(scraper, sites, "Faz a coleta dos dados dos anúncios nos", "HTTPS/HTML")
    Rel(scraper, scraper_db, "Armazena os metadados da coleta em", "TCP")
    Rel(scraper, scraper_queue, "Envia dados dos anúncios para", "AMQP", $tags = "async")
    Rel(processor, scraper_queue, "Consome dados dos anúncios em", "AMQP", $tags = "async")
    Rel(processor, api_db, "Persiste os dados processados no", "TCP")
    Rel(api, api_db, "Consulta os dados dos anúncios no", "TCP")
}

@enduml
